// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/product/release": {
            "delete": {
                "description": "On input takes warehouse_id and product ids .",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "warehouse"
                ],
                "summary": "Releases reserve.",
                "parameters": [
                    {
                        "description": "input",
                        "name": "reqBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/deleterelease.requestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/product/reserve": {
            "post": {
                "description": "On input takes warehouse_id, product ids and  quantities.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "warehouse"
                ],
                "summary": "Reserves products if warehouse have enough.",
                "parameters": [
                    {
                        "description": "input",
                        "name": "reqBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postreserve.requestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/warehouse/product": {
            "get": {
                "description": "On input takes warehouse_id, and page offset.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "warehouse"
                ],
                "summary": "Returns all products from specified warehouse.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page offset",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/getproducts.responseBody"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "deleterelease.requestBody": {
            "type": "object",
            "properties": {
                "uniqueIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "warehouseId": {
                    "type": "string"
                }
            }
        },
        "getproducts.Product": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "size": {
                    "type": "string"
                }
            }
        },
        "getproducts.responseBody": {
            "type": "object",
            "properties": {
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/getproducts.Product"
                    }
                }
            }
        },
        "postreserve.requestBody": {
            "type": "object",
            "properties": {
                "reserveItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/postreserve.reserveItems"
                    }
                },
                "warehouseId": {
                    "type": "string"
                }
            }
        },
        "postreserve.reserveItems": {
            "type": "object",
            "required": [
                "quantity"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Warehouse API",
	Description:      "Warehouse API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
